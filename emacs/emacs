;; import the master.emacs file

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(defconst master-dir (getenv "LOCAL_ADMIN_SCRIPTS"))

(if (file-readable-p (expand-file-name "master.emacs" master-dir))
    (load-library (expand-file-name "master.emacs" master-dir))
    (message "facebook master emacs file not found!"))

;; set up package repos
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")))

(menu-bar-mode -1)

(when window-system
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (load-theme 'tango-dark)
  (fringe-mode 0))

;; auto revert stale buffers
(global-auto-revert-mode t)

;; (require 'fill-column-indicator)
;; (setq-default fill-column 80)

;; helm
(require 'helm-config)
(global-set-key (kbd "M-x") #'helm-M-x)
(global-set-key (kbd "C-x r b") #'helm-filtered-bookmarks)
(global-set-key (kbd "C-x C-f") #'helm-find-files)
(helm-mode 1)

;; helm-projectile
(projectile-global-mode)
(setq projectile-completion-system 'helm)
(helm-projectile-on)
(define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)

(if (string-equal "darwin" (symbol-name system-type))
    (setenv "PATH" (concat (getenv "HOME") "/bin:/usr/local/bin:" (getenv "PATH"))))

(if (string-equal "gnu/linux" (symbol-name system-type))
    (setenv "PATH" (concat (getenv "HOME") "/bin:/usr/local/bin:" (getenv "PATH"))))

;; don't use the git pager by default
(setenv "GIT_PAGER" "")

;; let eshell modify global environment variables
(setq eshell-modify-global-environment t)

;; always show trailing whitespace
(setq-default show-trailing-whitespace t)
;; except in eshell
(add-hook 'eshell-mode-hook
          (lambda ()
            (setq show-trailing-whitespace nil)))

;; always use tabs
(setq-default indent-tabs-mode nil)

;; goto-line for old emacs
(global-set-key (kbd "M-g")   'goto-line)

;; always use fullscreen
(set-frame-parameter nil 'fullscreen 'fullboth)

;; json-reformat
(require 'json-reformat)

;; use aspell for MacOS
;; (setq ispell-program-name "aspell")

;; don't start with the typical startup message
(setq inhibit-startup-message t)

;; move emacs backups to a global directory
(setq backup-directory-alist '(("." . "~/.emacs-backups")))

;; show date and time
(setq display-time-day-and-date t)
(display-time)

;; ido mode on
(ido-mode t)

;; show column numbers
(column-number-mode t)

;; great stuff: http://www.howardism.org/Technical/Emacs/eshell-fun.html
(defun eshell-here ()
  "Opens up a new shell in the directory associated with the
current buffer's file. The eshell is renamed to match that
directory to make multiple eshell windows easier."
  (interactive)
  (let* ((parent (if (buffer-file-name)
                     (file-name-directory (buffer-file-name))
                   default-directory))
         (height (/ (window-total-height) 3))
         (name   (car (last (split-string parent "/" t)))))
    (split-window-vertically (- height))
    (other-window 1)
    (eshell "new")
    (rename-buffer (concat "*eshell: " name "*"))

    (insert (concat "ls"))
    (eshell-send-input)))

;; clear the buffer in eshell
;; src: http://daily-emacs.blogspot.com/2011/11/clear-in-eshell.html
(defun eshell/clear ()
  "clear the eshell buffer."
  (interactive)
  (let ((inhibit-read-only t))
    (erase-buffer))
)

(global-set-key (kbd "C-x 7") 'eshell-here)

;; disable Hg vc-backend (default is (RCS CVS SVN SCCS Bzr Git Hg Mtn Arch))
(setq vc-handled-backends (quote (RCS CVS SVN SCCS Bzr Git Mtn Arch)))

;; web mode
(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.js" . web-mode))
 (defadvice web-mode-highlight-part (around tweak-jsx activate)
   (if (equal web-mode-content-type "js")
       (let ((web-mode-enable-part-face nil))
         ad-do-it)
     ad-do-it))

;; prettier-js
(require 'prettier-js)
(add-hook 'web-mode-hook 'prettier-js-mode)
(add-hook 'web-mode-hook 'set-web-mode-indent-level)
(setq prettier-js-args '(
  "--trailing-comma" "all"
  "--single-quote" "true"
  "--no-bracket-spacing" "true"
  "--jsx-bracket-same-line" "true"
  "--parser" "flow"))

(defun set-web-mode-indent-level ()
  "Hooks for Web mode."
  (setq web-mode-code-indent-offset 2))


;; let's start up with eshell if
;; we're in the gui mode
(when window-system
  (eshell))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages (quote (helm-projectile helm))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
